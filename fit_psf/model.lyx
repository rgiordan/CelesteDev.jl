#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
First pass model
\end_layout

\begin_layout Standard
Denote a star's location in pixel coordinates as 
\begin_inset Formula $\mu=\left(\mu_{1},\mu_{2}\right)$
\end_inset

.
 (I will express all locations in pixel coordinates, which need not be integers
 â€“ by pixel coordinates I simply mean the unit of locations are image pixels.)
 At that location, suppose there is a PSF function in band 
\begin_inset Formula $b$
\end_inset

 denoted 
\begin_inset Formula $\psi_{b,\mu}\left(\cdot\right)$
\end_inset

so that the contribution to the expected pixel count at a pixel centered
 at 
\begin_inset Formula $x=\left(x_{1},x_{2}\right)$
\end_inset

 is given by 
\begin_inset Formula $\psi_{b,\mu}\left(x\right)$
\end_inset

.
 There is background radiation in each band, 
\begin_inset Formula $\epsilon_{b}\left(x\right)$
\end_inset

, which is also a function of 
\begin_inset Formula $x$
\end_inset

.
 Each star has a color in each ban, denoted 
\begin_inset Formula $c_{b,\mu}$
\end_inset

.
 We actually observe pixel counts 
\begin_inset Formula $y_{b,\mu}$
\end_inset

 associated with the star, which we assume are distributed independently
 and normally at each pixel:
\begin_inset Formula 
\begin{align*}
y_{b,\mu}\left(x\right)\vert\psi_{b,\mu},\epsilon_{b},\sigma,c_{b,\mu} & \sim\mathcal{N}\left(c_{b,\mu}\psi_{b,\mu}\left(x\right)+\epsilon_{b}\left(x\right),\sigma^{2}\right)\\
\ell_{b}\left(\psi_{b,\mu}\right) & :=\log P\left(y_{b,\mu}\left(x\right)\vert\psi_{b,\mu},\epsilon_{b},\sigma,c_{b,\mu}\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
For simplicity, assume that no sources overlap so that we only need to add
 contributions from one source.
 Given a set of 
\begin_inset Formula $y_{b,\mu}$
\end_inset

 and the remaining parameters, the goal is to infer 
\begin_inset Formula $\psi_{b,\mu}$
\end_inset

 for each 
\begin_inset Formula $b$
\end_inset

 as a function of 
\begin_inset Formula $\mu$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

.
 For simplicity, we can begin with maximum likelihood, though adapting to
 variational Bayes is straightforward.
\end_layout

\begin_layout Standard
We need a parameterization of 
\begin_inset Formula $\psi_{b,\mu}\left(x\right)$
\end_inset

.
 First, the dependency on 
\begin_inset Formula $x$
\end_inset

 will be through interpolating a matrix.
 That is, for each 
\begin_inset Formula $\mu$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, we represent 
\begin_inset Formula $\psi_{b,\mu}$
\end_inset

 as a matrix of values 
\begin_inset Formula $\psi_{b,\mu}$
\end_inset


\begin_inset Formula $\left(i,j\right)$
\end_inset

 (with some abuse of notation).
 Then
\begin_inset Formula 
\begin{align*}
\psi_{b,\mu}\left(x\right) & =\sum_{i=-\infty}^{\infty}\sum_{j=-\infty}^{\infty}\psi_{b,\mu}\left(i,j\right)\kappa\left(x_{1}-\mu_{1}+i\right)\kappa\left(x_{2}-\mu_{2}+j\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\kappa\left(\cdot\right)$
\end_inset

 is an interpolating kernel such that, for all 
\begin_inset Formula $x$
\end_inset

,
\begin_inset Formula 
\begin{align*}
\sum_{i=-\infty}^{\infty}\kappa\left(x+i\right) & =1
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The cubic kernel appears to have this property.
 In this way, the total pixel flux of the image is not a function of 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Standard
We then need to describe the dependence of the matrices 
\begin_inset Formula $\psi_{b,\mu}$
\end_inset

 on 
\begin_inset Formula $\mu$
\end_inset

 for a given 
\begin_inset Formula $b.$
\end_inset

 Define a dictionary of matrices, 
\begin_inset Formula $\psi_{k}$
\end_inset

 for 
\begin_inset Formula $k=1,...,K$
\end_inset

.
 We can represent
\begin_inset Formula 
\begin{align*}
\psi_{b,\mu} & =\sum_{k}\pi_{b,k}\left(\mu\right)\psi_{k}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\pi_{b,k}\left(\mu\right)$
\end_inset

 is a smooth non-negative function of 
\begin_inset Formula $\mu$
\end_inset

, different for each 
\begin_inset Formula $b$
\end_inset

, and where 
\begin_inset Formula $\sum_{k}\pi_{b,k}\left(\mu\right)=1$
\end_inset

.
 We can either parameterize 
\begin_inset Formula $\pi_{b,k}\left(\mu\right)$
\end_inset

 by a normalized high-degree polynomial:
\begin_inset Formula 
\begin{align*}
p_{b,k}\left(\mu\right) & =\exp\left(\beta_{b,1,k}^{T}\mu_{1}+\beta_{b,2,k}^{T}\mu_{2}+\beta_{0}\right)\textrm{ for }k<K\\
p_{b,K}\left(\mu\right) & =1\\
\pi_{b,k}\left(\mu\right) & =\frac{p_{b,k}\left(\mu\right)}{\sum_{k'}p_{b,k'}\left(\mu\right)}
\end{align*}

\end_inset

 or estimate it non-parametrically using a Gaussian process, or something
 else (e.g.
 something sparse).
 In any case, assume the dependence on 
\begin_inset Formula $\mu$
\end_inset

 is parameterized by a parameter 
\begin_inset Formula $\beta_{b}$
\end_inset

.
 The problem becomes to estimate 
\begin_inset Formula $\beta_{b}$
\end_inset

 and 
\begin_inset Formula $\psi:=\left(\psi_{1},...,\psi_{K}\right)$
\end_inset

, i.e.
\begin_inset Formula 
\begin{align*}
\ell_{b}\left(\psi_{b,\mu}\right) & =\ell\left(\beta_{b},\psi\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
We can impose sparsity on the 
\begin_inset Formula $\psi_{k}$
\end_inset

 by regularizing in a number of different ways.
 Note that in order to avoid indeterminacy between 
\begin_inset Formula $\psi_{k}$
\end_inset

 and 
\begin_inset Formula $\beta_{0}$
\end_inset

, the 
\begin_inset Formula $\psi_{k}$
\end_inset

 need to be centered, e.g.
 constrained so that the center of mass is in the middle of the image.
 (There may also be other non-identifiabilities that I haven't thought of.)
\end_layout

\begin_layout Standard
Some exploratory analysis is appropriate before taking too strong a stand
 on any of the details.
\end_layout

\begin_layout Section
Pseudo-code implementation
\end_layout

\begin_layout Itemize
Load images.
 For each 
\begin_inset Formula $b$
\end_inset

, they contain
\end_layout

\begin_deeper
\begin_layout Itemize
The pixels 
\begin_inset Formula $y_{b}$
\end_inset


\end_layout

\begin_layout Itemize
A catalog of stars and colors 
\begin_inset Formula $c_{b}$
\end_inset


\end_layout

\begin_layout Itemize
Estimates of 
\begin_inset Formula $\epsilon_{b}$
\end_inset


\end_layout

\begin_layout Itemize
Estimates of 
\begin_inset Formula $\sigma_{b}$
\end_inset


\end_layout

\begin_layout Itemize
Translations from world to pixel coordinates.
\end_layout

\end_deeper
\begin_layout Itemize
Load the Gaia catalog.
 This contains
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Formula $\mu$
\end_inset

 values that we take to be the true star locations.
\end_layout

\end_deeper
\begin_layout Itemize
Choose a set of stars to use.
 They should be isolated and well-located by Gaia, and should span each
 image as much as possible.
\end_layout

\begin_layout Itemize
Optimize.
 Until converged, at step 
\begin_inset Formula $i$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
For each 
\begin_inset Formula $b$
\end_inset

, set 
\begin_inset Formula $\beta_{b}^{\left(i\right)}\leftarrow\textrm{argmax}_{\beta}\ell\left(\beta,\psi^{\left(i-1\right)}\right)$
\end_inset


\end_layout

\begin_layout Itemize
Set 
\begin_inset Formula $\psi^{\left(i\right)}\leftarrow\textrm{argmax}_{\psi}\sum_{b}\ell\left(\beta^{\left(i\right)},\psi\right)+\lambda\left\Vert \psi\right\Vert $
\end_inset

, where 
\begin_inset Formula $\lambda\left\Vert \psi\right\Vert $
\end_inset

 is a regularization term
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
The details of the optimization remain to be worked out.
 Note that Celeste already has much of the computation needed to evaluate
 the necessaary derivatives.
\end_layout

\end_body
\end_document
